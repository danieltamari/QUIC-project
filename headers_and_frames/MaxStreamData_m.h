//
// Generated file, do not edit! Created by nedtool 5.6 from inet/applications/quicapp/headers_and_frames/MaxStreamData.msg.
//

#ifndef __INET_MAXSTREAMDATA_M_H
#define __INET_MAXSTREAMDATA_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif


namespace inet {

class MaxStreamData;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/applications/base/ApplicationPacket_m.h" // import inet.applications.base.ApplicationPacket

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Class generated from <tt>inet/applications/quicapp/headers_and_frames/MaxStreamData.msg:23</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * class MaxStreamData extends FieldsChunk
 * {
 *     int Stream_ID;
 *     int Maximum_Stream_Data;
 * }
 * </pre>
 */
class INET_API MaxStreamData : public ::inet::FieldsChunk
{
  protected:
    int Stream_ID = 0;
    int Maximum_Stream_Data = 0;

  private:
    void copy(const MaxStreamData& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MaxStreamData&);

  public:
    MaxStreamData();
    MaxStreamData(const MaxStreamData& other);
    virtual ~MaxStreamData();
    MaxStreamData& operator=(const MaxStreamData& other);
    virtual MaxStreamData *dup() const override {return new MaxStreamData(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getStream_ID() const;
    virtual void setStream_ID(int Stream_ID);
    virtual int getMaximum_Stream_Data() const;
    virtual void setMaximum_Stream_Data(int Maximum_Stream_Data);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MaxStreamData& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MaxStreamData& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_MAXSTREAMDATA_M_H

